class Stack():

  def __init__(self):
    self.L = []
    self.tem = 0

  def push(self, valor):
    for i in range(len(self.lista)):
      self.tem = 1
    
    if self.tem ==0:
      self.L.append(valor)

    self.tem = 0

  def pop(self):
    if(not(self.isEmpty())):
      return self.L.pop()

  def isEmpty(self):
    return len(self.L)==0

  def length(self):
    return len(self.L)

  def peek(self):
    if(not(self.isEmpty())):
      return self.L[-1]


class Stack:
  def __init__(self):
    self.L = []
    self.tem = 0

  def push(self, valor):
    for i in range(len(self.L)):
      if(valor==self.L[i]):
        self.tem = 1
    if(self.tem==0):
      self.L.append(valor)

    self.tem = 0

  def pop(self):
    if(not(self.isEmpty())):
      return self.L.pop()

  def isEmpty(self):
    return len(self.L)==0

  def length (self):
    return len(self.L)

  def peek(self):
    if(not(self.Empty)):
      return self.L[-1]

stack = Stack()
stack.push(1)
stack.push(3)
stack.push(5)
stack.push(7)
stack.push(9)
print(stack.L)
